CCS PCM C Compiler, Version 4.114, 93460303               15-Jan-15 00:04

               Filename: D:\30_ELECTRONICs\80_WORK\80_Projects\02_Sounder_(ciprian)\20_SW\sounder_picc\main.lst

               ROM used: 104 words (14%)
                         Largest free fragment is 664
               RAM used: 14 (27%) at main() level
                         14 (27%) worst case
               Stack:    1 worst case (0 in main + 1 for interrupts)

*
0000:  NOP
0001:  MOVLW  00
0002:  MOVWF  0A
0003:  GOTO   04F
0004:  BTFSC  03.5
0005:  GOTO   00A
0006:  MOVWF  24
0007:  SWAPF  03,W
0008:  MOVWF  25
0009:  GOTO   00F
000A:  BCF    03.5
000B:  MOVWF  24
000C:  SWAPF  03,W
000D:  MOVWF  25
000E:  BSF    25.1
000F:  MOVF   0A,W
0010:  MOVWF  2B
0011:  CLRF   0A
0012:  BCF    03.7
0013:  SWAPF  24,F
0014:  MOVF   04,W
0015:  MOVWF  26
0016:  MOVF   20,W
0017:  MOVWF  27
0018:  MOVF   21,W
0019:  MOVWF  28
001A:  MOVF   22,W
001B:  MOVWF  29
001C:  MOVF   23,W
001D:  MOVWF  2A
001E:  BCF    03.5
001F:  BTFSS  0B.5
0020:  GOTO   023
0021:  BTFSC  0B.2
0022:  GOTO   03E
0023:  BTFSS  0B.4
0024:  GOTO   027
0025:  BTFSC  0B.1
0026:  GOTO   049
0027:  BTFSS  0B.3
0028:  GOTO   02B
0029:  BTFSC  0B.0
002A:  GOTO   04C
002B:  MOVF   26,W
002C:  MOVWF  04
002D:  MOVF   27,W
002E:  MOVWF  20
002F:  MOVF   28,W
0030:  MOVWF  21
0031:  MOVF   29,W
0032:  MOVWF  22
0033:  MOVF   2A,W
0034:  MOVWF  23
0035:  MOVF   2B,W
0036:  MOVWF  0A
0037:  SWAPF  25,W
0038:  MOVWF  03
0039:  BCF    03.5
003A:  SWAPF  24,W
003B:  BTFSC  25.1
003C:  BSF    03.5
003D:  RETFIE
....................  
....................  
.................... #include <main.h> 
.................... #include <12F675.h> 
.................... //////// Standard Header file for the PIC12F675 device //////////////// 
.................... #device PIC12F675 
.................... #list 
....................  
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES MCLR                     //Master Clear pin enabled 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOCPD                    //No EE protection 
....................  
.................... #use delay(clock=4000000) 
.................... #define LED PIN_A0 
.................... #define DELAY 1000 
....................  
....................  
....................  
....................  
.................... #include <types.h> 
....................  
....................  
.................... //typedef uint8 int8 
....................  
....................  
.................... #include <inm.h> 
....................  
....................  
....................  
....................  
....................  
.................... // CONSTANTs 
.................... // PINs 
.................... #define PIN_IN_VOLTAGE_LEVEL  PIN_A0 
.................... #define PIN_IN_KL15           PIN_A1 
.................... #define PIN_IN_ACC            PIN_A2 
.................... #define PIN_IN_POS_LIGHT      PIN_A3 
.................... #define PIN_IN_DOOR           PIN_A4 
.................... #define PIN_OUT_BUZ           PIN_A5 
....................  
.................... #define LOW   0 
.................... #define HIGH  1 
....................  
.................... #define ON TRUE 
.................... #define OFF FALSE 
....................  
.................... #define DOOR_OPEN 0 
....................  
.................... int getDoorState(void); 
.................... int getKeyInState(void); 
.................... int getKl15State(void); 
.................... int getPosLightState(void); 
....................  
.................... #define GET_KL15_STATE        input(PIN_A1) 
.................... #define GET_KL_ACC_STATE      input(PIN_A2) 
.................... #define GET_POS_LIGHT_STATE   input(PIN_A3) 
.................... #define GET_DOOR_STATE        input(PIN_A4) 
....................  
....................  
.................... #include <sounder.h> 
....................  
....................  
....................  
.................... extern void mainSounder(); 
....................  
....................  
....................  
....................  
.................... /******************************************************************************* 
....................  * GLOBAL VARS - START  */ 
....................  
.................... char tmrAlarm = 0; 
.................... char tmrEv = 0; 
....................  
....................  
.................... /* GLOBAL VARS - START 
....................  ******************************************************************************/ 
....................  
....................  
....................  
.................... /******************************************************************************* 
....................  * INTERRUPTS - START */ 
....................  
....................  
.................... #int_RTCC 
.................... void  RTCC_isr(void)  
.................... { 
....................    tmrAlarm++; 
003E:  INCF   2C,F
....................    if (tmrAlarm == 5) 
003F:  MOVF   2C,W
0040:  SUBLW  05
0041:  BTFSS  03.2
0042:  GOTO   046
....................    { 
....................       tmrAlarm = 0; 
0043:  CLRF   2C
....................       tmrEv = 1; 
0044:  MOVLW  01
0045:  MOVWF  2D
....................    } 
.................... } 
....................  
0046:  BCF    0B.2
0047:  BCF    0A.3
0048:  GOTO   02B
.................... #int_EXT 
.................... void  EXT_isr(void)  
.................... { 
....................  
.................... } 
....................  
....................  
....................  
0049:  BCF    0B.1
004A:  BCF    0A.3
004B:  GOTO   02B
.................... #int_RA 
.................... void  RA_isr(void)  
.................... { 
....................  
.................... } 
....................  
.................... /* INTERRUPTS - END 
....................  ******************************************************************************/ 
....................  
....................  
....................  
....................  
....................  
004C:  BCF    0B.0
004D:  BCF    0A.3
004E:  GOTO   02B
.................... void init() 
.................... { 
....................    set_tris_a(0b11011111); // set GP1 output, all other inputs 
....................     
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_4|RTCC_8_bit);    /* 1.0 ms overflow */ 
....................    setup_comparator(NC_NC); 
....................  
....................    enable_interrupts(INT_RTCC); 
....................    enable_interrupts(INT_RA); 
....................    enable_interrupts(GLOBAL); 
.................... } /* init() */ 
....................  
....................  
.................... /******************************************************************************* 
....................  * MAIN - START */ 
....................  
....................  
.................... void main() 
.................... { 
004F:  CLRF   04
0050:  MOVLW  1F
0051:  ANDWF  03,F
0052:  CLRF   2C
0053:  CLRF   2D
0054:  BCF    1F.6
0055:  BSF    03.5
0056:  BCF    1F.0
0057:  BCF    1F.1
0058:  BCF    1F.2
0059:  BCF    1F.3
005A:  MOVLW  07
005B:  BCF    03.5
005C:  MOVWF  19
.................... #define LED_PIN RA0 
....................    output_high(PIN_A5); // turn LED on 
005D:  BSF    03.5
005E:  BCF    05.5
005F:  BCF    03.5
0060:  BSF    05.5
....................  
....................     while(true) 
....................     { 
....................       while (tmrEv == 0) /* wait 5ms to pass */ 
....................       { 
0061:  MOVF   2D,F
0062:  BTFSS  03.2
0063:  GOTO   066
....................          tmrEv = 0; 
0064:  CLRF   2D
....................       } 
0065:  GOTO   061
....................     } 
0066:  GOTO   061
.................... } /* main() */ 
....................  
.................... /* MAIN - END 
....................  ******************************************************************************/ 
....................  
0067:  GOTO   067

Configuration Fuses:
   Word  1: 3F92   HS NOWDT NOPUT NOMCLR NOBROWNOUT NOPROTECT NOCPD

   Some fuses have been forced to be compatible with the ICD debugger.
